# compress video

ffmpeg -i "INPUT FILE PATH.mp4" -c:v h264 -preset slow "OUTPUTFILE PATH.mp4"


200,455.61


# 拆解音频，一样的duration=20
ffmpeg -i somefile.mp3 -f segment -segment_time 1200 -c copy .\parts\out%03d.mp3\


# compress video
ffmpeg -i input.mp4 -vcodec h264 -acodec aac out.mp4


# add watermark into video
ffmpeg -i input.mp4 -i watermark.png -filter_complex "overlay=1500:1000" output.mp4



// 获取当前目录中的 m4a文件
$oldvids = Get-ChildItem -Filter "*.m4a" -Recurse
//在当前目录中执行转行命令
foreach ($oldvid in $oldvids) {
    $newvid = [io.path]::ChangeExtension($oldvid, '.mp3')
    ffmpeg -i $oldvid  $newvid
}

# only download english subtitle
youtube-dl --proxy socks5://127.0.0.1:10808  --sub-lang en --write-auto-sub --sub-format srt --skip-download  ''


# download youtube video with thumbnail
youtube-dl.exe -cif mp4 --proxy socks5://127.0.0.1:10808 --write-sub  --convert-subtitles srt --embed-thumbnail 'xxx'


# 更改audio的 album picture 
ffmpeg -i audio-in.mp3 -i picture.png -c:a copy -c:v copy -map 0:0 -map 1:0 -id3v2_version 3 -metadata:s:v title="Album cover" -metadata:s:v comment="Cover (front)" audio-out.mp3


# cut audio from/to position   within 20 minutes
ffmpeg -i "original.mp3" -ss 0 -to 1200 "new.mp3"  

# cut audio to the end of audio
ffmpeg -i "original.mp3" -ss 2440  -c copy part2-3.mp3




F:\telegram\collection\How_Big_Things_Get_Done\vosk-api\python\example> python3 .\test_srt.py F:\telegram\collection\How_Big_Things_Get_Done\how.wav > subtitle1.srt

#burn subtitle into video
ffmpeg -i input.mp4 -vf subtitles=subtitle.srt output_srt.mp4

#利用剪影标出时间，剪裁音频
ffmpeg -i original.mp3 -ss 00:07.13 -t 05:04.16 -acodec copy output.mp3 


# combaine MP3 to mp4 with thumbnail
ffmpeg -loop 1 -i ima.jpg -i audio.wav -c:v libx264 -tune stillimage -c:a aac -b:a 192k -pix_fmt yuv420p -shortest out.mp4

